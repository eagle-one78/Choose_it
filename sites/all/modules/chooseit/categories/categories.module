<?php
/**
* @file
 * A module to display the categories available
 */

define('PERMISSION_VIEW_CATEGORY', 'view category');
//define('PERMISSION_EDIT_CATEGORY', 'edit category');
define('PERMISSION_INSERT_CATEGORY', 'insert category');

/**
 * Implements hook_permission().
 */
function categories_permission() {
  return array(
    PERMISSION_VIEW_CATEGORY => array(
      'title' => t('View the categories'),
      'description' => t('View the categories', array()),
    ),
//    PERMISSION_EDIT_CATEGORY => array(
//      'title' => t('Edit the categories'),
//      'description' => t('Editing the categories', array()),
//    ),
    PERMISSION_INSERT_CATEGORY => array(
      'title' => t('Insert a categories'),
      'description' => t('Insert new category', array()),
    ),
  );
}

/**
 *
 *@return array $blocks
 */
function categories_block_info() {
  $blocks = array();
  $blocks['insert-categories'] = array(
    'info' => t('L채gg till kategori'),
  );

  return $blocks;
}

function categories_block_configure($delta='') {
  $form = array();

  switch($delta) {
    case 'insert-categories' :
      // Text field form element
      $form['text_body'] = array(
        '#type' => 'text_format',
        '#title' => t('L채gg till kategori'),
        '#default_value' => variable_get('text_variable', ''),
      );

      // File selection form element
      $form['file'] = array(
        '#name' => 'block_image',
        '#type' => 'managed_file',
        '#title' => t('Choose an Image File'),
        '#description' => t('Select an Image for the custom block.  Only *.gif, *.png, *.jpg, and *.jpeg images allowed.'),
        '#default_value' => variable_get('block_image_fid', ''),
        '#upload_location' => 'public://block_image/',
        '#upload_validators' => array(
          'file_validate_extensions' => array('gif png jpg jpeg'),
        ),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_menu().
 */
function categories_menu() {
  $items = array();
  $items['categories'] = array(
    'title' => 'Visa kategorier',
    'page callback' => 'categories_callback',
    'access arguments' => array('PERMISSION_VIEW_CATEGORY'),
  );
//  $items['category/%'] = array(
//    'title' => 'Redigera kategori',
//    'description' => 'Redigera kategori',
//    'page callback' => 'edit_category_callback',
//    'access arguments' => array('edit category'),
//  );
  $items['categories/%'] = array(
    'title' => 'L채gg till kategori',
    'page arguments' => array(1),
    'page callback' => 'insert_category_callback',
    'access arguments' => array(PERMISSION_INSERT_CATEGORY),
  );
  return $items;
}

/**
 * A hook to get the categories available
 *
 */

function categories_callback() {
  $categories = array();
  $categoryObject = new Category();
  if (isset($categoryObject)) {
    $categories['categoriesInfo'] = $categoryObject->get_all_categories_from_DB();
  }
  return theme('categories', $categories);
}

/**
 *
 * @param type $catId
 */
function edit_category_callback($catId) {

}

function insert_category() {
  if (isset($_POST['insert_category']) &&
    isset($_POST['category_name']) &&
    isset($_POST['category_description'])) {
    $categoryObject = new Category();
    if (isset($categoryObject)) {
      $categoryObject->insert_category($_POST);
    }
  }
  else {
    drupal_set_message(t('Du m책ste ange namn och beskrivning!'), 'error');
  }
}

/**
 *
 * @param type $catId
 */
function insert_category_callback() {
  $categoryInsert = array();
  if (isset($_POST['insert_category'])) {
    $categoryInsert['insertCategory'] = insert_category();
  }

  return theme('categories', $categoryInsert);
}

 /**
 * View the module theme for the categories
 * @return  array $items
 */
function categories_theme($existing, $type, $theme, $path) {
  $items['categories'] = array(
    'render element' => 'categories',
    'template'       => 'categories',
    'arguments'      => array('form' => NULL),
    'path'           => drupal_get_path('module', 'categories'),
  );
  return $items;
}
